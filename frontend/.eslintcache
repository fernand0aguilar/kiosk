[{"/home/fraguilar/Documents/projects/mars/kiosk/frontend/src/App.js":"1","/home/fraguilar/Documents/projects/mars/kiosk/frontend/src/index.js":"2"},{"size":4951,"mtime":1608686381023,"results":"3","hashOfConfig":"4"},{"size":217,"mtime":1608678902319,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1ugr083",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/fraguilar/Documents/projects/mars/kiosk/frontend/src/App.js",["11"],"import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nfunction App() {\n  const [currentTime, setCurrentTime] = useState(0);\n  const [prompt, setPrompt] = useState('');\n  const [max_tokens, setMax_tokens] = useState(125);\n  const [temperature, setTemperature] = useState(0.9);\n  const [top_p, setTop_p] = useState(0.9);\n  const [frequency_penalty, setFrequency_penalty] = useState(0.9);\n  const [presence_penalty, setPresence_penalty] = useState(0.9);\n\n  useEffect(() => {\n      fetch('/time')\n          .then((res) => res.json())\n          .then((data) => {\n              setCurrentTime(data.time);\n          });\n  }, []);\n\n  const namespace = '/gpt3';\n  var socket = io(namespace);    // http[s]://<domain>:<port>[/<namespace>]\n\n  socket.on('connect', function() {\n      //socket.emit('connected', {data: 'I\\'m connected!'});\n  });\n\n  socket.on('completion', function(msg, cb) {\n      console.log('got back response')\n      console.log(msg.data)\n      document.getElementById('#log').append('<br>' + msg.data);\n      if (cb) {\n          cb();\n      }\n  });\n\n  const formEmit = function(event) {\n\n      // var temperature = float(document.getElementById('temperature').value);\n      // var max_tokens = int(document.getElementById('max_tokens').value);\n      console.log('event', event)\n\n      const values = {\n        prompt: prompt,\n        max_tokens: max_tokens,\n        temperature: temperature,\n        top_p: top_p,\n        frequency_penalty: frequency_penalty,\n        presence_penalty: presence_penalty,\n      }\n      console.log('values', values)\n      socket.emit('completion_request', values);\n      return false;\n  };\n\n\n \n  \n  return (\n    <div className='App'>\n      {/* <header className='App-header'>\n          <img src={logo} className='App-logo' alt='logo' />\n        </header> */}\n\n\n      <p>The current time is {currentTime}.</p>\n      <div id=\"playground\">\n          <div id=\"playground_text\">\n              <form onSubmit={formEmit} id=\"emit\" method=\"POST\" action='#'>\n                <textarea rows={30} cols={100} name=\"prompt_text\" id=\"prompt_text\" placeholder=\"Message\"></textarea>\n                <br/>\n                <input type=\"submit\" value=\"Submit\" />\n              </form>\n          </div>\n          <div id=\"playground_menu\">\n              <label htmlFor=\"engines\">Engine:</label>\n              <select name=\"engines\" id=\"engines\">\n                <option value=\"davinci\">davinci</option>\n                <option value=\"curie\">curie</option>\n                <option value=\"babbage\">babbage</option>\n                <option value=\"ada\">ada</option>\n              </select> \n          \n              <h3>\n                  Response Length ({max_tokens})\n                  <br/>\n                  <input \n                    type=\"range\" min=\"50\" max=\"400\" \n                    step=\"1\" className=\"slider\" id=\"max_tokens\"\n                    value={max_tokens} \n                    onChange={e => setMax_tokens(e.target.value)} \n                  />\n              </h3>\n              <h3>\n                  Temperature (<span id=\"temperature_val\">{temperature}</span>)\n                  <br/>\n                  <input \n                    type=\"range\" min=\"0\" max=\"1\" \n                    step=\"0.01\" className=\"slider\" id=\"temperature\"\n                    value={temperature} \n                    onChange={e => setTemperature(e.target.value)}  \n                  />\n              </h3>\n\n              <h3>\n                  Top P (<span id=\"top_p_val\">{top_p}</span>)\n                  <br/>\n                  <input \n                    type=\"range\" min=\"0\" max=\"1\" \n                    step=\"0.01\" className=\"slider\" id=\"top_p\"\n                    value={top_p} \n                    onChange={e => setTop_p(e.target.value)} \n                  />\n              </h3>\n\n              <h3>\n                  Frequency Penalty (<span id=\"frequency_penalty_val\">{frequency_penalty}</span>)\n                  <br/>\n                  <input \n                    type=\"range\" min=\"0\" max=\"1\" \n                    step=\"0.01\" className=\"slider\" id=\"frequency_penalty\" \n                    value={frequency_penalty} \n                    onChange={e => setFrequency_penalty(e.target.value)} \n                  />\n              </h3>\n              <h3>\n                  Presence Penalty (<span id=\"presence_penalty_val\">{presence_penalty}</span>)\n                  <br/>\n                  <input \n                    type=\"range\" min=\"0\" max=\"1\" \n                    step=\"0.01\" className=\"slider\" id=\"presence_penalty\"\n                    value={presence_penalty} \n                    onChange={e => setPresence_penalty(e.target.value)} \n                  />\n              </h3>\n              <h3>\n                  Stop Sequences\n              </h3>\n          </div>\n      </div>\n\n      <h2>Receive:</h2>\n      <div id=\"log\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/fraguilar/Documents/projects/mars/kiosk/frontend/src/index.js",[],{"ruleId":"12","severity":1,"message":"13","line":7,"column":18,"nodeType":"14","messageId":"15","endLine":7,"endColumn":27},"no-unused-vars","'setPrompt' is assigned a value but never used.","Identifier","unusedVar"]