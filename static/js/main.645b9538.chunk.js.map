{"version":3,"sources":["utils/calendar/algorithms/index.js","utils/calendar/functions.js","utils/calendar/algorithms/handleDaily.js","utils/calendar/algorithms/handleDateOfMonth.js","utils/calendar/algorithms/handleDayOfMonth.js","utils/calendar/algorithms/handleWeekly.js","Containers/botControllerContainer.js","utils/calendar/googleAPI.js","Containers/calendarContainer.js","Containers/fluidSimulatorContainer.js","API.js","images/logo.png","App.js","index.js"],"names":["handleDaily","require","handleDateOfMonth","handleDayOfMonth","handleWeekly","module","exports","filterByOneProperty","propterty","events","filter","event","r","filterIncludesString","filters","str","length","includes","oneTime","calendar","item","recurrence","map","e","start","date","Date","dateTime","end","title","summary","eventType","name","description","location","glink","htmlLink","meta","recurring","split","recurringByProperty","fn","occurences","concat","apply","removeCancelled","status","removeRecurrenceProperty","moment","wtfGoogle","pop","parseInt","n","add","reoccurringEvents","creator","_d","gLink","reoccurringEvent","clone","push","counter","tempCounter","nextStart","year","month","hour","minutes","nextEnd","getDay","day","Typography","Title","Paragraph","Select","Option","Input","TextArea","Object","defineProperty","Array","prototype","value","depth","this","reduce","flat","toFlatten","isArray","config","Promise","calendars","fetch","url","api_key","then","res","json","items","oneTimeEvents","recurringEvents","daily","recurringDaily","dailyRecurrence","weekly","recurringWeekly","weeklyRecurrence","monthly","dateOfMonth","dayOfMonth","recurringDateOfMonth","monthlyRecurrence","recurringDayOfMonth","allEvents","localizer","BigCalendar","momentLocalizer","calendar_configuration","process","CalendarContainer","props","componentDidMount","getGoogleCalendarEvents","console","log","googleAPI","setState","catch","err","Error","render","state","defaultView","style","height","Component","FluidSimulatorContainer","values","FluidSimulatorsSidebar","textureDownsample","densityDissipation","velocityDissipation","pressureDissipation","pressureIterations","curl","splatRadius","setConfig","hooks","padding","level","defaultValue","onChange","step","min","max","socket","io","transports","on","emit","data","msg","cb","a","newPrompt","prompt","Header","Layout","Content","Footer","Sider","App","useState","engine","max_tokens","temperature","top_p","frequency_penalty","presence_penalty","stop_sequences","botConfig","setBotConfig","animationRef","fluidConfig","setFluidConfig","activeTab","setActiveTab","tabs","content","className","icon","CalendarOutlined","sidebar","FireOutlined","src","LogoImage","width","backgroundImage","float","backgroundColor","alt","theme","mode","defaultSelectedKeys","tab","index","Item","onClick","defaultOpenKeys","borderRight","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.645b9538.chunk.js","sourcesContent":["const handleDaily = require('./handleDaily')\nconst handleDateOfMonth = require('./handleDateOfMonth')\nconst handleDayOfMonth = require('./handleDayOfMonth')\nconst handleWeekly = require('./handleWeekly')\n\nmodule.exports = {\n\n  handleDaily,\n  handleDateOfMonth,\n  handleDayOfMonth,\n  handleWeekly\n\n}\n","/*\n * Higher-Order fuctions for processing events from Google Calendar\n */\n\n// filterByOneProperty :: String -> [{}] -> [{}]\nconst filterByOneProperty = (propterty, events) => events\n  .filter(event => event.r[0] === propterty)\n\n// filterIncludesString :: [] -> String -> Bool\nconst filterIncludesString = (filters, str) => filters[filters.length - 1].includes(str)\n\n// oneTime :: String -> [{}] -> [{}]\nconst oneTime = (calendar, events) => events\n  .filter(item => !item.recurrence)\n  .map(e => {\n    // account for all day events and arbitrarily set time to 8am-5pm\n    const start = e.start.date\n      ? new Date(`${e.start.date}T08:00:00`)\n      : new Date(e.start.dateTime)\n    const end = e.end.date\n      ? new Date(`${e.start.date}T05:00:00`)\n      : new Date(e.end.dateTime)\n\n    return {\n      title: e.summary,\n      eventType: calendar.name,\n      start: start,\n      end: end,\n      description: e.description,\n      location: e.location,\n      glink: e.htmlLink,\n      meta: e\n    }\n  })\n\n// recurring :: [{}] -> [{}]\nconst recurring = events => events.filter(item => item.recurrence)\n  .map(event => ({ e: event, r: event.recurrence[0].split(';') }))\n\n// recurringByProperty :: [{}] -> Function -> String -> Int -> [{}]\nconst recurringByProperty = (events, fn, calendar, occurences) => [].concat.apply([], events)\n  .map(event => fn(calendar, occurences, event))\n\n// removeCancelled :: [{}] -> [{}]\nconst removeCancelled = events => events.filter(item => item.status !== \"cancelled\")\n\n// removeRecurrenceProperty :: [{}] -> [{}]\nconst removeRecurrenceProperty = events => events.map(event => event.e)\n\nmodule.exports = {\n  filterByOneProperty,\n  filterIncludesString,\n  oneTime,\n  recurring,\n  recurringByProperty,\n  removeCancelled,\n  removeRecurrenceProperty\n}\n","const moment = require('moment')\n\n/*\n * Handles events that occur every 'n' number of days\n * (e.g. every day, every 5 days)\n */\n\n// handleDaily :: String -> Int -> {} -> [{}]\nconst handleDaily = (calendar, recurrence, e) => {\n  const start = e.start.date\n    ? moment(e.start.date)\n    : moment(e.start.dateTime)\n  const end = e.end.date\n    ? moment(e.start.date)\n    : moment(e.end.dateTime)\n\n  // reformat reponse to get how many days between each recurrence\n  const wtfGoogle = (e.recurrence[0].split(\";\").pop().split(\"=\").pop() !== \"DAILY\")\n    ? parseInt(e.recurrence[0].split(\";\").pop().split(\"=\").pop())\n    : 1\n  const n = wtfGoogle\n  let add = wtfGoogle\n  let reoccurringEvents = [\n    {\n      eventType: calendar.name,\n      creator: e.creator,\n      end: end._d,\n      gLink: e.htmlLink,\n      description: e.description,\n      location: e.location,\n      start: start._d,\n      title: e.summary,\n      meta: e\n    }\n  ]\n\n  while (recurrence > 0) {\n    const reoccurringEvent = {\n      eventType: calendar.name,\n      creator: e.creator,\n      end: end.clone().add(add, 'days')._d,\n      gLink: e.htmlLink,\n      description: e.description,\n      location: e.location,\n      start: start.clone().add(add, 'days')._d,\n      title: e.summary,\n      meta: e\n    }\n    reoccurringEvents.push(reoccurringEvent)\n    recurrence --\n    add += n\n  }\n  return reoccurringEvents\n}\n\nmodule.exports = handleDaily\n","const moment = require('moment')\n\n/*\n * Handles events that occure the same date of every month\n * (e.g. the 1st, the 8th)\n */\n\n// handleDateOfMonth :: String -> Int -> {} -> [{}]\n const handleDateOfMonth = (calendar, recurrence, e) => {\n   const start = e.start.date\n     ? moment(e.start.date)\n     : moment(e.start.dateTime)\n   const end = e.end.date\n     ? moment(e.start.date)\n     : moment(e.end.dateTime)\n\n   let reoccurringEvents = [\n     {\n       eventType: calendar.name,\n       creator: e.creator,\n       end: end._d,\n       gLink: e.htmlLink,\n       description: e.description,\n       location: e.location,\n       start: start._d,\n       title: e.summary,\n       meta: e\n     }\n   ]\n   let add = 1\n\n   while (recurrence > 0) {\n     const reoccurringEvent = {\n       eventType: calendar.name,\n       creator: e.creator,\n       end: end.clone().add(add, 'months')._d,\n       gLink: e.htmlLink,\n       description: e.description,\n       location: e.location,\n       start: start.clone().add(add, 'months')._d,\n       title: e.summary,\n       meta: e\n     }\n     reoccurringEvents.push(reoccurringEvent)\n     recurrence --\n     add ++\n   }\n   return reoccurringEvents\n }\n\nmodule.exports = handleDateOfMonth\n","const moment = require('moment')\n\n/*\n * Handles events that occur the same day of the month\n * (e.g. first Friday, last Monday)\n */\n\n// handleDayOfMonth :: String -> Int -> {} -> [{}]\nconst handleDayOfMonth = (calendar, recurrence, e) => {\n  const start = e.start.date\n    ? moment(e.start.date)\n    : moment(e.start.dateTime)\n  const end = e.end.date\n    ? moment(e.start.date)\n    : moment(e.end.dateTime)\n\n  const date = start.date()\n  let counter\n\n  if (date <= 7) {\n    counter = 1\n  } else if ((date >7) && (date <= 14)) {\n    counter = 7\n  } else if ((date > 14) && (date <= 21)) {\n    counter = 14\n  } else if ((date > 21) && (date <= 28)) {\n    counter = 21\n  } else {\n    counter = 28\n  }\n\n  let reoccurringEvents = [\n    {\n      eventType: calendar.name,\n      creator: e.creator,\n      end: end._d,\n      gLink: e.htmlLink,\n      description: e.description,\n      location: e.location,\n      start: start._d,\n      title: e.summary,\n      meta: e\n    }\n  ]\n\n  while (recurrence > 0) {\n    let tempCounter = counter\n    // Using variables 'recurrence' and 'tempCounter' doesn't work with Moment\n    let nextStart = new Date(start.year(), start.month() + recurrence, tempCounter, start.hour(), start.minutes())\n    let nextEnd = new Date(end.year(), end.month() + recurrence, tempCounter, end.hour(), end.minutes())\n\n    while (tempCounter < 31) {\n      let isEqual = nextStart.getDay() === start.day()\n\n      if (isEqual) {\n        const reoccurringEvent = {\n          eventType: calendar.name,\n          creator: e.creator,\n          end: nextEnd,\n          gLink: e.htmlLink,\n          description: e.description,\n          location: e.location,\n          start: nextStart,\n          title: e.summary,\n          meta: e\n        }\n        reoccurringEvents.push(reoccurringEvent)\n        tempCounter = counter\n        break\n      }\n\n      nextStart = new Date(start.year(), start.month() + recurrence, tempCounter, start.hour(), start.minutes())\n      nextEnd = new Date(end.year(), end.month() + recurrence, tempCounter, end.hour(), end.minutes())\n      tempCounter ++\n    }\n    recurrence --\n  }\n  return reoccurringEvents\n}\n\nmodule.exports = handleDayOfMonth\n","const moment = require('moment')\n\n/*\n * Handles events that occur the same day of every week\n * (e.g. every Monday)\n */\n\n// handleWeekly :: String -> Int -> {} -> [{}]\nconst handleWeekly = (calendar, recurrence, e) => {\n  const start = e.start.date\n    ? moment(e.start.date)\n    : moment(e.start.dateTime)\n  const end = e.end.date\n    ? moment(e.start.date)\n    : moment(e.end.dateTime)\n\n  let reoccurringEvents = [\n    {\n      eventType: calendar.name,\n      creator: e.creator,\n      end: end._d,\n      gLink: e.htmlLink,\n      description: e.description,\n      location: e.location,\n      start: start._d,\n      title: e.summary,\n      meta: e\n    }\n  ]\n  let add = 1\n\n  while (recurrence > 0) {\n    const reoccurringEvent = {\n      eventType: calendar.name,\n      creator: e.creator,\n      end: end.clone().add(add, 'week')._d,\n      gLink: e.htmlLink,\n      description: e.description,\n      location: e.location,\n      start: start.clone().add(add, 'week')._d,\n      title: e.summary,\n      meta: e\n    }\n    \n    reoccurringEvents.push(reoccurringEvent)\n    recurrence --\n    add ++\n  }\n  return reoccurringEvents\n}\n\nmodule.exports = handleWeekly\n","import React from 'react';\nimport { Select, Slider, Input, Typography } from 'antd';\n\nconst { Title, Paragraph } = Typography;\nconst { Option } = Select;\n\nconst { TextArea } = Input;\n\nexport function BotFormComponent(props) {\n    const { prompt, formEmit } = props;\n    \n    return (\n        <div>\n            <Title level={4}>Type your Message here:</Title>\n            <form \n                onSubmit={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                formEmit(event)\n            }} \n                id=\"noter-text-area\" \n                method=\"GET\" action='#'>\n                <TextArea\n                    id=\"textarea\"\n                    value={prompt}\n                    onChange={e => props.hooks({\n                        ...props.values,\n                        prompt: e.target.value\n                    })}\n                    placeholder=\"Type your message\"\n                    autoSize={{ minRows: 18 }}\n                />\n                <input type=\"submit\" value=\"Save\" />\n            </form>\n            <div style={{marginTop: '20px'}}>\n                <Title>Bot Response:</Title>\n                <Paragraph>{prompt}</Paragraph>\n            </div>\n        </div>\n    )\n}\n\nexport function BotCustomSidebar(props) {\n  const {\n    engine,\n    max_tokens,\n    temperature,\n    top_p,\n    frequency_penalty,\n    presence_penalty,\n    stop_sequences\n  } = props.values;\n  \n  const setConfig = props.hooks;\n  \n  return (\n        <div style={{padding: '10px'}}>\n        <Title level={3}>Controls</Title>\n        <hr/>\n        <Title level={5}>Engine:</Title>\n        <Select \n        defaultValue={engine || \"davinci\"} \n        style={{ width: 150 }} \n        onChange={e => setConfig({\n            ...props.values,\n            engine: e\n        })}>\n            <Option value=\"davinci\">davinci</Option>\n            <Option value=\"curie\">curie</Option>\n            <Option value=\"babbage\">babbage</Option>\n            <Option value=\"ada\">ada</Option>\n        </Select>\n\n        <div>\n        <Title level={5}>\n            Response Length ({max_tokens})\n        </Title>\n        <Slider  marks={{50: '50', 400: '400'}}\n                defaultValue={max_tokens}\n                step={1}\n                min={50}\n                max={400}\n                value={max_tokens}\n                onChange={e => setConfig({\n                    ...props.values,\n                    max_tokens: e\n                })} \n            />\n        </div>\n        <div>\n        <Title level={5}>\n            Temperature ({temperature})\n        </Title>\n        <Slider marks={{0: '0', 1: '1'}}\n                defaultValue={temperature}\n                step={0.01}\n                min={0}\n                max={1}\n                value={temperature}\n                onChange={e => setConfig({\n                    ...props.values,\n                    temperature: e\n                })}\n            />\n        </div>\n\n        <div>\n            <Title level={5}>\n                Top P ({top_p})\n            </Title>\n            <Slider marks={{0: '0', 1: '1'}}\n                defaultValue={top_p}\n                step={0.01}\n                min={0}\n                max={1}\n                value={top_p}\n                onChange={e => setConfig({\n                    ...props.values,\n                    top_p: e\n                })}\n            />\n        </div>\n\n        <div>\n        <Title level={5}>\n            Frequency Penalty ({frequency_penalty})\n        </Title>\n        <Slider marks={{0: '0', 1: '1'}}\n                defaultValue={frequency_penalty}\n                step={0.01}\n                min={0}\n                max={1}\n                value={frequency_penalty}\n                onChange={e => setConfig({\n                    ...props.values,\n                    frequency_penalty: e\n                })}\n            />\n        </div>\n        <div>\n        <Title level={5}>\n            Presence Penalty ({presence_penalty})\n        </Title>\n        <Slider marks={{0: '0', 1: '1'}}\n            defaultValue={presence_penalty}\n            step={0.01}\n            min={0}\n            max={1}\n            value={presence_penalty}\n            onChange={e => setConfig({\n                    ...props.values,\n                    presence_penalty: e\n                })}\n            valueLabelDisplay=\"off\"\n        />\n        </div>\n        <div>\n        <Title level={5}>\n            Stop Sequences\n        </Title>\n        <Paragraph>Type the word, press Enter</Paragraph>\n        <Select\n            value={stop_sequences}\n            onChange={e => setConfig({\n                    ...props.values,\n                    stop_sequences: e\n                })}\n            placeholder=\"Stop Words\"\n            mode=\"tags\"\n            tokenSeparators={[',']} \n            size={'large'} \n            dropdownStyle={{ display: 'none' }}\n            style={{ width: '100%'}}>\n        </Select>\n        </div>\n    </div>\n  );\n}","import * as Promise from 'bluebird'\n\nimport {\n  handleDaily,\n  handleDateOfMonth,\n  handleDayOfMonth,\n  handleWeekly\n} from './algorithms'\nimport {\n  filterByOneProperty,\n  filterIncludesString,\n  oneTime,\n  recurring,\n  recurringByProperty,\n  removeCancelled,\n  removeRecurrenceProperty\n} from './functions'\n\n// eslint-disable-next-line no-extend-native\nObject.defineProperty(Array.prototype, 'flat', {\n    value: function(depth = 1) {\n      return this.reduce(function (flat, toFlatten) {\n        return flat.concat((Array.isArray(toFlatten) && (depth-1)) ? toFlatten.flat(depth-1) : toFlatten);\n      }, []);\n    }\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n\n  /*\n   * Get events from all calendars specified and created specified number of recurring events\n   */\n  getAllCalendars: (config) => Promise.map(config.calendars, (calendar) => {\n    // get each calendar\n    return fetch(`https://content.googleapis.com/calendar/v3/calendars/${calendar.url}/events?key=${config.api_key}`)\n      .then(res => res.json())\n      .then(res => {\n        const items = res.items\n        const events = removeCancelled(items)\n        const oneTimeEvents = oneTime(calendar, events)\n        const recurringEvents = recurring(events)\n\n        const daily = filterByOneProperty(\"RRULE:FREQ=DAILY\", recurringEvents)\n        const recurringDaily = recurringByProperty(\n          removeRecurrenceProperty(daily),\n          handleDaily,\n          calendar,\n          config.dailyRecurrence\n        ).flat()\n\n        const weekly = filterByOneProperty(\"RRULE:FREQ=WEEKLY\", recurringEvents)\n        const recurringWeekly = recurringByProperty(\n          removeRecurrenceProperty(weekly),\n          handleWeekly,\n          calendar,\n          config.weeklyRecurrence\n        ).flat()\n        \n        const monthly = filterByOneProperty(\"RRULE:FREQ=MONTHLY\", recurringEvents)\n        // dateOfMonth will have only one item in the array, so this will verify \"RRULE:FREQ=MONTHLY\"\n        const dateOfMonth = monthly\n          .filter(item => filterIncludesString(item.r, \"TH\"))\n        // however, dayOfMonth will have two items in the array\n        // the second item will be like \"BYDAY=1FR\"\n        const dayOfMonth = monthly\n          .filter(item => !filterIncludesString(item.r, \"TH\"))\n\n        const recurringDateOfMonth = recurringByProperty(\n          removeRecurrenceProperty(dateOfMonth),\n          handleDateOfMonth,\n          calendar,\n          config.monthlyRecurrence\n        ).flat()\n        const recurringDayOfMonth = recurringByProperty(\n          removeRecurrenceProperty(dayOfMonth),\n          handleDayOfMonth,\n          calendar,\n          config.monthlyRecurrence\n        ).flat()\n\n        const allEvents = [].concat(\n          oneTimeEvents,\n          recurringDaily,\n          recurringWeekly,\n          recurringDateOfMonth,\n          recurringDayOfMonth\n        )\n        \n        return allEvents.flat()\n      })\n  })\n  .then(allEvents => [].concat.apply([], allEvents))\n\n}\n","import React, { Component } from 'react'\nimport BigCalendar from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport googleAPI from  \"../utils/calendar/googleAPI\"\n\nconst localizer = BigCalendar.momentLocalizer(moment)\n\nconst calendar_configuration = {\n    api_key: process.env.REACT_APP_GOOGLE_API_KEY,\n    calendars: [\n      {\n        name: 'Mars College', // whatever you want to name it\n        url: process.env.REACT_APP_URL_MARS_CALENDAR // your calendar URL\n      }\n    ], \n    dailyRecurrence: 600, \n    weeklyRecurrence: 100,\n    monthlyRecurrence: 100\n}\n\nexport class CalendarContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      events: []\n    }\n  }\n  \n  componentDidMount = () => {\n    if (calendar_configuration) {\n      this.getGoogleCalendarEvents()\n    } else {\n      console.log(\"React Google Calendar requires you pass a configuration object\")\n    }\n  }\n\n  getGoogleCalendarEvents = () => {\n    googleAPI.getAllCalendars(calendar_configuration)\n      .then(events => {\n        this.setState({ events })\n      })\n      .catch(err => { throw new Error(err) })\n  }\n\n  render = () =>\n    <div>\n      <BigCalendar\n        localizer={localizer}\n        events={this.state.events}\n        defaultView=\"agenda\"\n        style={{ height: \"75vh\" }} \n        />\n    </div>\n}","import React from 'react';\nimport FluidAnimation from 'react-fluid-animation'\n\nimport { Select, Slider, Typography } from 'antd';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\n\nexport function FluidSimulatorContainer(props) {\n    \n    return (\n        <FluidAnimation \n            config={props.values}\n            // animationRef={animationRef}\n            style={{ height: '90vh' }}/>\n    )\n}\n\nexport function FluidSimulatorsSidebar(props) {\n    const {\n        textureDownsample,\n        densityDissipation,\n        velocityDissipation,\n        pressureDissipation,\n        pressureIterations,\n        curl,\n        splatRadius,\n    } = props.values;\n\n    const setConfig = props.hooks;\n\n    return (\n          <div style={{padding: '10px'}}>\n          <Title level={3}>Controls</Title>\n          <hr/>\n          {/* <Button \n            type=\"primary\" \n            onClick={onClickRandomSplats}>Random Beams</Button> */}\n          <br/>\n          <Title level={5}>Texture Downsample:</Title>\n          <Select defaultValue={textureDownsample || \"0\"} \n            onChange={e => setConfig({\n                ...props.values,\n                textureDownsample: e\n            })}>\n              <Option value=\"0\">0</Option>\n              <Option value=\"1\">1</Option>\n              <Option value=\"2\">2</Option>\n          </Select>\n  \n          <div>\n          <Title level={5}>\n              Density Dissipation ({densityDissipation})\n          </Title>\n          <Slider\n                  defaultValue={densityDissipation}\n                  step={0.001}\n                  min={0.9}\n                  max={1.0}\n                  value={densityDissipation}\n                  onChange={e => setConfig({\n                    ...props.values,\n                    densityDissipation: e\n                })} \n              />\n          </div>\n          <div>\n          <Title level={5}>\n              Velocity Difusion ({velocityDissipation})\n          </Title>\n          <Slider\n                  defaultValue={velocityDissipation}\n                  step={0.01}\n                  min={0.9}\n                  max={1}\n                  value={velocityDissipation}\n                  onChange={e => setConfig({\n                    ...props.values,\n                    velocityDissipation: e\n                })}\n              />\n          </div>\n  \n          <div>\n              <Title level={5}>\n                  Pressure Difusion ({pressureDissipation})\n              </Title>\n              <Slider\n                  defaultValue={pressureDissipation}\n                  step={0.01}\n                  min={0}\n                  max={1}\n                  value={pressureDissipation}\n                  onChange={e => setConfig({\n                    ...props.values,\n                    pressureDissipation: e\n                })} \n              />\n          </div>\n          <div>\n          <Title level={5}>\n              Pressure Iterations ({pressureIterations})\n          </Title>\n          <Slider\n                  defaultValue={pressureIterations}\n                  step={1}\n                  min={1}\n                  max={60}\n                  value={pressureIterations}\n                  onChange={e => setConfig({\n                    ...props.values,\n                    pressureIterations: e\n                })} \n              />\n          </div>\n          <div>\n          <Title level={5}>\n              Curl ({curl})\n          </Title>\n          <Slider\n              defaultValue={curl}\n              step={1}\n              min={0}\n              max={50}\n              value={curl}\n              onChange={e => setConfig({\n                ...props.values,\n                curl: e\n            })}\n          />\n          </div>\n          <div>\n          <Title level={5}>\n              Splat Radius ({splatRadius})\n          </Title>\n          <Slider\n              defaultValue={splatRadius}\n              step={0.0001}\n              min={0.00001}\n              max={0.02}\n              value={splatRadius}\n              onChange={e => setConfig({\n                ...props.values,\n                splatRadius: e\n            })} \n          />\n          </div>\n          {/* <Title level={5}>\n              Random Splat\n          </Title>\n          <Button onClick={onClickRandomSplats}></Button>\n          <Title level={5}>\n              Reset Config\n          </Title>\n          <Button onClick={onReset}></Button> */}\n      </div>\n    );\n  }","import io from 'socket.io-client';\n\nexport const socket = io('http://localhost:5000', {\n  transports: ['websocket']\n});\n\nsocket.on('connect', function () {\n  socket.emit('connected', {\n    data: 'I\\'m connected!'\n  });\n});\n\n\nsocket.on('completion', async function (msg, cb) {\n  const newPrompt = prompt + ' ' + msg.data\n  if (cb) {\n    cb(newPrompt);\n  }\n});","export default __webpack_public_path__ + \"static/media/logo.44ccfb9e.png\";","import React, { useState } from 'react';\nimport { Layout, Menu, Typography } from 'antd';\nimport { RobotOutlined, CalendarOutlined, CloudOutlined, SoundOutlined, FireOutlined } from '@ant-design/icons';\n\nimport { BotCustomSidebar, BotFormComponent } from './Containers/botControllerContainer';\nimport { CalendarContainer } from './Containers/calendarContainer';\nimport { FluidSimulatorContainer, FluidSimulatorsSidebar }from './Containers/fluidSimulatorContainer'\nimport WeatherContainer from './Containers/weatherContainer';\n\nimport { socket } from './API'\n\nimport './App.css';\nimport LogoImage from './images/logo.png'\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n \n  const [botConfig, setBotConfig] = useState({\n    engine: 'davinci',\n    prompt: '',\n    max_tokens: 125,\n    temperature: 0.9,\n    top_p: 0.9,\n    frequency_penalty: 0.9,\n    presence_penalty: 0.9,\n    stop_sequences: [],\n  });\n\n  const [fluidConfig, setFluidConfig] = useState({\n    textureDownsample: 1,\n    densityDissipation: 0.98,\n    velocityDissipation: 0.99,\n    pressureDissipation: 0.8,\n    pressureIterations: 25,\n    curl: 30,\n    splatRadius: 0.005,\n    animationRef: ''\n  });\n\n  const [activeTab, setActiveTab] = useState(0);\n  \n  socket.on('completion', async function (msg, cb) {\n    const newPrompt = prompt + ' ' + msg.data\n    setBotConfig({\n      ...botConfig,\n      prompt: newPrompt\n    })\n  });\n  \n  const tabs = [\n    // { \n    //   title: 'Bots',\n    //   content: (\n    //     <Content className=\"site-layout-background\">\n    //       <Title level={1}>Bot Controller</Title>\n    //       <BotFormComponent \n    //         prompt={botConfig.prompt} \n    //         formEmit={event => socket.emit('completion_request', botConfig)} />\n    //     </Content>\n    //     ),\n    //   icon: <RobotOutlined />,\n    //   sidebar:<BotCustomSidebar values={botConfig}  hooks={setBotConfig}/>\n    // },\n    {\n      title: 'Calendar',\n      content: (\n        <Content className=\"site-layout-background\">\n          <Title level={3}>Calendar</Title>\n          <CalendarContainer/>\n        </Content>\n        ),\n      icon: <CalendarOutlined />,\n      sidebar: <div>sidebar</div>\n    },\n    // {\n    //   title: 'Weather',\n    //   content: (\n    //     <Content className=\"site-layout-background\">\n    //       <Title level={3}>Weather Forecast</Title>\n    //       <WeatherContainer/>\n    //     </Content>\n    //     ),\n    //   icon: <CloudOutlined />,\n    //   sidebar: <div><Title>Weather Forecast</Title></div>\n    // },\n    { \n      title: 'Images',\n      content: (\n        <Content className=\"site-layout-background\">\n          <Title level={3}>Click To Play</Title>\n          <FluidSimulatorContainer values={fluidConfig} hooks={setFluidConfig}/>\n        </Content>\n        ),\n      icon: <FireOutlined />,\n      sidebar: <div><FluidSimulatorsSidebar values={fluidConfig} hooks={setFluidConfig} /></div>\n    }\n    // { \n    //   title: 'Music',\n    //   content: (\n    //     <Content className=\"site-layout-background\">\n    //       <Title level={3}>Music Controller</Title>\n    //     </Content>\n    //     ),\n    //   icon: <SoundOutlined />,\n    //   sidebar: <div>hey</div>\n    // },\n  ]\n\n  return (\n    <Layout>\n    <Header className=\"header\">\n      <div className=\"logo\">\n        <img \n          src={LogoImage} \n          style={{ width: 64, height: 64, backgroundImage: {LogoImage}, float:'left', backgroundColor:'#3d3d3d'}}\n          alt=\"logo\"\n        ></img>\n      </div>\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['0']}>\n      {\n        tabs.map((tab, index) => {\n          tab.value = index;\n          return <Menu.Item\n            key={index} \n            icon={tab.icon}\n            onClick={() => setActiveTab(tab.value)}\n          >\n            {tab.title}\n          </Menu.Item>\n        })\n      }\n      </Menu>\n    </Header>\n    <Layout>\n      {tabs[activeTab].title === 'Images' ? \n      <Sider width={200} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['1']}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          {tabs[activeTab].sidebar}\n        </Menu>\n      </Sider> : null}\n      <Layout style={{ padding: '0 24px 24px' }}>\n        {tabs[activeTab].content}\n      </Layout>\n    </Layout>\n    <Footer>Mars.College</Footer>\n  </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport \"antd/dist/antd.css\";\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}